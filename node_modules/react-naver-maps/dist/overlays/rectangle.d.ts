import * as react from 'react';
import { UIEventHandlers } from '../types/event.js';

declare const uiEvents: readonly ["click", "dblclick", "mousedown", "mouseout", "mouseover", "mouseup"];
declare type RectangleOptions = {
    /**
     * @type naver.maps.Bounds | naver.maps.BoundsLiteral
     */
    bounds: naver.maps.Bounds | naver.maps.BoundsLiteral;
    strokeWeight?: number;
    strokeOpacity?: number;
    strokeColor?: string;
    strokeStyle?: naver.maps.strokeStyleType;
    strokeLineCap?: naver.maps.strokeLineCapType;
    strokeLineJoin?: naver.maps.strokeLineJoinType;
    fillColor?: string;
    fillOpacity?: number;
    clickable?: boolean;
    visible?: boolean;
    zIndex?: number;
};
declare type Props = RectangleOptions & {
    onBoundsChanged?: (value: naver.maps.Bounds) => void;
    onClickableChanged?: (value: boolean) => void;
    onVisibleChanged?: (value: boolean) => void;
    onZIndexChanged?: (value: number) => void;
} & UIEventHandlers<typeof uiEvents>;
declare const Rectangle: react.ForwardRefExoticComponent<RectangleOptions & {
    onBoundsChanged?: ((value: naver.maps.Bounds) => void) | undefined;
    onClickableChanged?: ((value: boolean) => void) | undefined;
    onVisibleChanged?: ((value: boolean) => void) | undefined;
    onZIndexChanged?: ((value: number) => void) | undefined;
} & Partial<Record<"onClick" | "onMousedown" | "onMouseup" | "onDblclick" | "onMouseover" | "onMouseout", (e: naver.maps.PointerEvent) => void>> & react.RefAttributes<naver.maps.Rectangle>>;

export { Props, Rectangle };
