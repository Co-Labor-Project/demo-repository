"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/utils/load-script.ts
var load_script_exports = {};
__export(load_script_exports, {
  loadScript: () => loadScript
});
module.exports = __toCommonJS(load_script_exports);
var import_load_script = __toESM(require("load-script"));
function loadScript(src) {
  return new Promise((resolve, reject) => {
    (0, import_load_script.default)(src, (err, script) => {
      if (err)
        reject(err);
      else
        resolve(script);
    });
  });
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  loadScript
});
//# sourceMappingURL=load-script.js.map