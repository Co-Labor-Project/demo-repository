import {
  omitUndefined
} from "./chunk-RVDAKL7Q.mjs";
import {
  useNavermaps
} from "./chunk-SENI7KNJ.mjs";
import {
  HandleEvents
} from "./chunk-533MYCRP.mjs";
import {
  Overlay
} from "./chunk-IV7GZJYG.mjs";

// src/overlays/rectangle.tsx
import pick from "lodash.pick";
import { useEffect, useState, forwardRef, useImperativeHandle } from "react";
import { jsx } from "react/jsx-runtime";
var optionKeys = [
  "strokeWeight",
  "strokeOpacity",
  "strokeColor",
  "strokeStyle",
  "strokeLineCap",
  "strokeLineJoin",
  "fillColor",
  "fillOpacity"
];
var kvoKeys = [
  "bounds",
  "clickable",
  "visible",
  "zIndex"
];
var kvoEvents = kvoKeys.map((key) => `${key}_changed`);
var uiEvents = [
  "click",
  "dblclick",
  "mousedown",
  "mouseout",
  "mouseover",
  "mouseup"
];
var events = [...uiEvents, ...kvoEvents];
var Rectangle = forwardRef(function Rectangle2(props, ref) {
  const options = pick(props, [...optionKeys, ...kvoKeys]);
  const navermaps = useNavermaps();
  const [rectangle] = useState(() => new navermaps.Rectangle(options));
  useImperativeHandle(ref, () => rectangle);
  useEffect(() => {
    rectangle.setOptions(omitUndefined(options));
  }, kvoKeys.map((key) => options[key]));
  return /* @__PURE__ */ jsx(Overlay, {
    element: rectangle,
    children: /* @__PURE__ */ jsx(HandleEvents, {
      events,
      listeners: props
    })
  });
});

export {
  Rectangle
};
//# sourceMappingURL=chunk-COX7LVBL.mjs.map